Git init => Va a inicializar un repositorio nuevo.

Git clone => Clona un repositorio ya existente.

Git status => muestra el estado de los cambios en el repositorio desde la última versión guardada.

Git log => muestra el historial de commits de un repositorio ordenado cronológicamente.

Git show => muestra el usuario, el día, la hora y el mensaje del último commit y también se le puede indicar el commit indicado.

Git annotate => muestra el contenido de un fichero anotando cada línea con información del commit en el que se introdujo.

Git diff => muestra las diferencias entre el directorio de trabajo y la zona de intercambio temporal.

Git checkout <commit> -- <file> => actualiza el fichero a la versión correspondiente al commit. 
Suele utilizarse para eliminar los cambios en un fichero que no han sido guardados aún en la zona de intercambio temporal.

Git reset <fichero> => elimina los cambios del fichero <fichero> de la zona de intercambio temporal, pero preserva los cambios en el directorio de trabajo

Git add <file> => añade un cambio del directorio de trabajo en el entorno de ensayo. Git add. añadirá todos los cambios independientemente de sea o no de esa carpeta.

Git commit => sirve para confirmar una instantánea del directorio del entorno de ensayo con un mensaje.

Git merge => permite tomar las líneas independientes de desarrollo creadas por git branch e integrarlas en una sola rama. 
Ten en cuenta que todos los comandos presentados a continuación se fusionan en la rama actual.
